[
{
	"uri": "http://example.org/kubernetes/01-%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86/",
	"title": "01-配置代理",
	"tags": [],
	"description": "",
	"content": " shadowsocks 科学上网 参考文档: https://www.zfl9.com/ss-local.html\nssserver 安装 # CentOS/RHEL yum -y install epel-release yum -y install python-pip pip install shadowsocks  配置 echo \u0026quot;{ \u0026quot;server\u0026quot;: \u0026quot;1.2.3.4\u0026quot;, \u0026quot;server_port\u0026quot;: 8989, \u0026quot;method\u0026quot;: \u0026quot;aes-128-cfb\u0026quot;, \u0026quot;password\u0026quot;: \u0026quot;123456\u0026quot;, \u0026quot;local_address\u0026quot;: \u0026quot;127.0.0.1\u0026quot;, \u0026quot;local_port\u0026quot;: 1080, \u0026quot;fast_open\u0026quot;: true, \u0026quot;workers\u0026quot;: 1 }\u0026quot; \u0026gt; /etc/shadowsocks.json ssserver -c /etc/shadowsocks.json -d start # 日志默认地址 /var/log/shadowsocks.log # 配置说明： { \u0026quot;server\u0026quot;: \u0026quot;1.2.3.4\u0026quot;, # 服务器IP \u0026quot;server_port\u0026quot;: 8989, # 服务器Port \u0026quot;method\u0026quot;: \u0026quot;aes-128-cfb\u0026quot;, # 加密方式 \u0026quot;password\u0026quot;: \u0026quot;123456\u0026quot;, # 端口密码 \u0026quot;local_address\u0026quot;: \u0026quot;127.0.0.1\u0026quot;, # 本地监听IP \u0026quot;local_port\u0026quot;: 1080, # 本地监听Port \u0026quot;fast_open\u0026quot;: true, # TCP Fast Open \u0026quot;workers\u0026quot;: 1 # worker进程数量 }  sslocal 安装 # CentOS/RHEL yum -y install epel-release yum -y install python-pip pip install shadowsocks  配置 echo \u0026quot;{ \u0026quot;server\u0026quot;: \u0026quot;1.2.3.4\u0026quot;, \u0026quot;server_port\u0026quot;: 8989, \u0026quot;method\u0026quot;: \u0026quot;aes-128-cfb\u0026quot;, \u0026quot;password\u0026quot;: \u0026quot;123456\u0026quot;, \u0026quot;local_address\u0026quot;: \u0026quot;127.0.0.1\u0026quot;, \u0026quot;local_port\u0026quot;: 1080, \u0026quot;fast_open\u0026quot;: true, \u0026quot;workers\u0026quot;: 1 }\u0026quot; \u0026gt; /etc/shadowsocks.conf sslocal -c /etc/shadowsocks.json -d start # 日志默认地址 /var/log/shadowsocks.log  privoxy # CentOS/RHEL yum -y install privoxy  gfwlist # 关于 gfwlist2privoxy 脚本 # 脚本依赖 base64、curl(支持 https)、perl5 v5.10.0+ # 你也可以从这个网址下载 gfwlist.action，6 小时更新一次 # https://zfl9.github.io/gfwlist2privoxy/gfwlist.action # 获取 gfwlist2privoxy 脚本 curl -4sSkL https://raw.github.com/zfl9/gfwlist2privoxy/master/gfwlist2privoxy -O # 生成 gfwlist.action 文件 bash gfwlist2privoxy '127.0.0.1:1080' # 检查 gfwlist.action 文件 more gfwlist.action # 一般有 5000+ 行 # 应用 gfwlist.action 文件 mv -f gfwlist.action /etc/privoxy echo 'actionsfile gfwlist.action' \u0026gt;\u0026gt;/etc/privoxy/config # 启动 privoxy.service 服务 systemctl start privoxy.service systemctl -l status privoxy.service  环境变量 # Initialization script for bash and sh # export proxy for GFW alias proxy_on='nohup sslocal -c /etc/shadowsocks.json \u0026amp; systemctl start privoxy' alias proxy_off='systemctl stop privoxy \u0026amp;\u0026amp; pkill sslocal' alias proxy_export='export http_proxy=http://127.0.0.1:8118 \u0026amp;\u0026amp; export https_proxy=http://127.0.0.1:8118 \u0026amp;\u0026amp; export no_proxy=localhost' alias proxy_unset='unset http_proxy https_proxy no_proxy' alias proxy_test='curl google.com'  "
},
{
	"uri": "http://example.org/",
	"title": "Index",
	"tags": [],
	"description": "",
	"content": "Notebook\n"
},
{
	"uri": "http://example.org/kubernetes/02-docker%E5%AE%89%E8%A3%85/",
	"title": "02-docker安装",
	"tags": [],
	"description": "",
	"content": " 版本：docker17.03\n官网安装指南: https://docs.docker.com/engine/installation/linux/centos/\n安装 #如果存在，移除旧的docker yum remove docker docker-common container-selinux docker-selinux docker-engine rpm -e $(rpm -q docker-ce) #安装工具 yum install -y yum-utils #添加仓库 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo yum makecache yum install -y policycoreutils-python #下载并安装docker-ce-selinux wget https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm rpm -ivh docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm #查看docker-ce版本并且安装 yum list docker-ce --showduplicates | sort -r yum -y install docker-ce-17.03.2.ce  配置 修改service文件 主要修改 ExecStart 参数，添加一个 Environment 参数，用于设置docker的代理，拉取镜像\nvi /usr/lib/systemd/system/docker.service  docker.service 模版 [Unit] Description=Docker Application Container Engine Documentation=https://docs.docker.com After=network.target firewalld.service [Service] Environment=\u0026quot;HTTP_PROXY=http://127.0.0.1:8118\u0026quot; \u0026quot;HTTPS_PROXY=http://127.0.0.1:8118\u0026quot; Type=notify # the default is not to use systemd for cgroups because the delegate issues still # exists and systemd currently does not support the cgroup feature set required # for containers run by docker ExecStart=/usr/bin/dockerd -H unix:///var/run/docker.sock -H tcp://0.0.0.0:6071 --insecure-registry=0.0.0.0/0 ExecReload=/bin/kill -s HUP $MAINPID # Having non-zero Limit*s causes performance problems due to accounting overhead # in the kernel. We recommend using cgroups to do container-local accounting. LimitNOFILE=infinity LimitNPROC=infinity LimitCORE=infinity # Uncomment TasksMax if your systemd version supports it. # Only systemd 226 and above support this version. #TasksMax=infinity TimeoutStartSec=0 # set delegate yes so that systemd does not reset the cgroups of docker containers Delegate=yes # kill only the docker process, not all processes in the cgroup KillMode=process [Install] WantedBy=multi-user.target  通过 daemon.json 修改文件系统和数据目录 mkdir -p /etc/docker cat \u0026gt; /etc/docker/daemon.json \u0026lt;\u0026lt;EOF { \u0026quot;storage-driver\u0026quot;: \u0026quot;overlay2\u0026quot;, \u0026quot;storage-opts\u0026quot;: [ \u0026quot;overlay2.override_kernel_check=true\u0026quot; ], \u0026quot;graph\u0026quot;: \u0026quot;/data/docker\u0026quot; } EOF  启动 #启动 systemctl daemon-reload systemctl enable docker systemctl restart docker #查看版本，详细信息 systemctl status docker docker info docker version  "
},
{
	"uri": "http://example.org/kubernetes/03-kubeadm%E5%AE%89%E8%A3%85/",
	"title": "kubeadm安装",
	"tags": [],
	"description": "",
	"content": " 关闭防火墙 Selinux Swap systemctl stop firewalld systemctl disable firewalld [[ -f /etc/init.d/ufw ]] \u0026amp;\u0026amp; { ufw disable;} [[ -f /etc/init.d/iptables ]] \u0026amp;\u0026amp; { /etc/init.d/iptables stop; }  setenforce 0 sed -i \u0026quot;s/^SELINUX=enforcing/SELINUX=disabled/g\u0026quot; /etc/sysconfig/selinux sed -i \u0026quot;s/^SELINUX=enforcing/SELINUX=disabled/g\u0026quot; /etc/selinux/config sed -i \u0026quot;s/^SELINUX=permissive/SELINUX=disabled/g\u0026quot; /etc/sysconfig/selinux sed -i \u0026quot;s/^SELINUX=permissive/SELINUX=disabled/g\u0026quot; /etc/selinux/config  swapoff -a  #内核 cat \u0026lt;\u0026lt;EOF \u0026gt; /etc/sysctl.d/k8s.conf net.ipv4.ip_forward = 1 net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 vm.swappiness=0 EOF sysctl -p /etc/sysctl.d/k8s.conf  添加kubernetes国内yum源 cat \u0026lt;\u0026lt;EOF \u0026gt; /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=0 repo_gpgcheck=0 gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF  yum -y install epel-release yum clean all yum makecache  安装KubeAdm yum -y install kubelet-1.12.2-0 kubeadm-1.12.2-0 kubectl-1.12.2-0 kubernetes-cni  "
},
{
	"uri": "http://example.org/kubernetes/05-%E7%BB%84%E4%BB%B6%E5%AE%89%E8%A3%85/",
	"title": "05-组件安装",
	"tags": [],
	"description": "",
	"content": " Kubernetes-Dashboard 官网下载的yaml，rbac 没有权限访问，需要将 role改为 clusterrole\nkubectl create -f kubernetes-dashboard.yaml  获取刚刚创建的 kubernetes-dashboard-token\nkubectl describe -n kube-system secret/`kubectl -n kube-system get secret | grep kubernetes-dashboard-admin-token | awk '{print $1}'`  Prometheus 需要创建 ClusterRole, ServiceAccount, ClusterRoleBinding,ConfigMap,Deployment,Service\nkubectl create -f prometheus.yaml  "
},
{
	"uri": "http://example.org/star/collection/",
	"title": "Collection",
	"tags": [],
	"description": "",
	"content": " Mesos 的资源分配，解释 mesos 的二级调度和资源邀约机制，并详细介绍了保证资源分配公平的DRF算法（主导资源公平算法 Dominant Resource Fairness）。\nhttps://www.infoq.cn/article/analyse-mesos-part-04\n goroutine 调度器解析。\nhttps://tonybai.com/2017/06/23/an-intro-about-goroutine-scheduler/\n 一致性哈希算法。\nhttps://segmentfault.com/a/1190000013533592\n  "
},
{
	"uri": "http://example.org/kubernetes/prometheus/",
	"title": "prometheus安装",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/kubernetes/istio/",
	"title": "istio 安装",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/kubernetes/readme/",
	"title": "README",
	"tags": [],
	"description": "",
	"content": " 深入剖析Kubernetes 特别鸣谢： 脚本一键部署集群 https://github.com/XishengCai/cloud "
},
{
	"uri": "http://example.org/kubernetes/04-kubernetes%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Kubernetes 集群搭建 kubeadm v1.12.2\nkubernetes v1.12\n初始化集群 可根据需求自定义 kubeadm yaml 文件 官网文档： https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1alpha3\n# kubeadm init --config kubeadm.yaml kubeadm init --kubernetes-version=v1.12.2 --pod-network-cidr=10.244.0.0/16  注意：pod-network-cidr 设置的网段与后续要创建的 flannel 的 Network 一致\n如果报错提示 [WARNING Hostname]: hostname \u0026ldquo;xxxxxx\u0026rdquo; could not be reached ,可在 /etc/hosts 配置主机名和ip\n执行完之后，会提示执行如下命令： To start using your cluster, you need to run the following as a regular user:\nmkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config  记录下打印出来的 kubeadm join 命令,后续加节点需要用到 You can now join any number of machines by running the following on each node as root:\nkubeadm join 172.16.32.115:6443 --token a6ea9z.6o60cjpmndt32f06 --discovery-token-ca-cert-hash sha256:f2026367a4f77f315dd2d67572a9cea2e2c51cb5cecd9297a868116f3eed3715  检查 master 组件是否起动完成 查看 kube-controller, scheduler, etcd 是否 healthy;\nkubectl get cs  检查 kube-proxy 组件是否起动完成 查看 kube-proxy 是否 running;\nkubectl -n kube-system get po  去掉污点 如果需要调度pod到master节点，则去掉污点 其中 master 为 hostname\nkubectl taint nodes master node-role.kubernetes.io/master-  初始化网络插件 flannel 配置 kubectl apply -f kube-flannel.yaml  添加slave节点 kubeadm join 172.16.32.115:6443 --token a6ea9z.6o60cjpmndt32f06 --discovery-token-ca-cert-hash sha256:f2026367a4f77f315dd2d67572a9cea2e2c51cb5cecd9297a868116f3eed3715  检查各节点是否正常 kubectl get no  集群重置 如搭建报错，执行如下命令删除集群重新搭建\nkubeadm reset \u0008# \u0008如已成功安装flannel 插件，还需清除 cni 插件 ifconfig cni0 down ip link delete cni0 ifconfig flannel.1 down ip link delete flannel.1 rm -rf /var/lib/cni/  "
},
{
	"uri": "http://example.org/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/kubernetes/",
	"title": "Kubernetes",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/star/",
	"title": "Stars",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]